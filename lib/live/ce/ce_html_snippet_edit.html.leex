   <%= f = form_for @changeset, "#", as: :step_data, theme: :tw_default,phx_change: :validate, phx_submit: :save, phx_target: @myself, id: @id, class: "w-2xl" %>



   <%= live_component  MavuSnippetsUi.Live.Ce.SaveBlock , class: "mb-5" %>


   <section phx-hook="TinyMceHook" id="tinymce_editors">
     <div tinymce-x-data="{
         getEditorConf: function (target) {
           return {
             menubar: false,
             inline: true,
             target: target,
             plugins: ['visualblocks', 'code', 'autosave', 'link'],
             toolbar: [
               'undo redo | bold italic underline | h2 h3 h4 | link | visualblocks code '
             ],
             force_br_newlines : true,
             force_p_newlines : false,
             valid_elements: 'p,strong,em,span,a[href|target=_blank|title],ul,ol,li,h1,h2,h3,h4,br',
             init_instance_callback: function(editor) {
                editor.on('blur', function(e) {
                  editor.save();
                  console.log('tinymce trigger save');
                });
             },
             skin_url: '/be_thirdparty/tinymce/skins/ui/oxide',
             setup: function(editor) {
                editor.on('init', function(e) {
                  editor.save();
                  console.log('tinymce trigger save on init');
                });
              },
           };
         },
         initEditor: function (name) {
           const el = document.getElementById('step_data[' + name + ']');
           if(el) {
              window.tinymce.init(this.getEditorConf(el));
           }
         }
       }" x-init="
        () => {
          console.log('tinymce div init');
              window.tinymce.remove();
              initEditor('text_l1');
              initEditor('text_l2');
              initEditor('text_l3');
              initEditor('text_l4');
              initEditor('text_l5');
              initEditor('text_l6');
              initEditor('text_l7');
              initEditor('text_l8');
              initEditor('text_l9');
        }
            ">
       <%= for l <- @active_language_map do %>

       <% {mode,placeholder}= MavuSnippets.get_effective_text_from_element(@celement,l.lang, @context[:snippets_conf]) %>

       <div
         class="inline-block rounded  text-xs uppercase px-2 py-1 ml-2 min-w-[3em] text-center hover:ring-primary-500 hover:ring-2 bg-gray-200"
         title="<%= l.langnum %>">
         <%= l.lang %></div>




       <div class="" phx-update="ignore">
         <%= input  f, l.fieldname,  using: :textarea, rows: 5 ,label: "Text:",append_classes: "editable ",
            wrapped_input: [update_html: :custom_fn],
            custom_fn: fn assigns -> %>
         <div class="prose-sm prose border border-gray-400 rounded">
           <div class="px-2 py-1 " id="<%= input_name(@form, @field) %>" x-ref="<%= @field %>">
             <%= input_value(@form, @field) |> raw() %></div>
         </div>
         <% end %>
       </div>


       <% end %>
     </div>
   </section>



   </form>
